/*
 * HiLink_Types.h
 *
 *  Created on: Aug 19, 2016
 *      Author: yanfen.fang
 */

#ifndef HILINK_TYPES_H_
#define HILINK_TYPES_H_
//#include "mapi.hpp"
//#include "testmethod.hpp"
#include <HILINK_DRIVE/HILINK_Data_Container.h>
#include <UserConfig.h>

//typedef HILINK_SITE_LANE_DATA_CONTAINER<ARRAY_I> LANE_INTLIST_DATA;
//typedef HILINK_SITE_LANE_DATA_CONTAINER<ARRAY_D> LANE_DBLLIST_DATA;
//
//
//typedef HILINK_SITE_LANE_DATA_CONTAINER<uint> LANE_INT_DATA;
//typedef HILINK_SITE_LANE_DATA_CONTAINER<double> LANE_DBL_DATA;
//
//typedef HILINK_SITE_MACRO_DATA_CONTAINER<uint> MACRO_INT_DATA;
//typedef HILINK_SITE_MACRO_DATA_CONTAINER<double> MACRO_DBL_DATA;
//
//typedef HILINK_SITE_MACRO_DATA_CONTAINER<ARRAY_I> MACRO_INTLIST_DATA;
//typedef HILINK_SITE_MACRO_DATA_CONTAINER<ARRAY_D> MACRO_DBLLIST_DATA;
//
//typedef HILINK_SITE_DATA_CONTAINER<uint> SITE_INT_DATA;
//typedef HILINK_SITE_DATA_CONTAINER<double> SITE_DBL_DATA;

typedef HILINK_SITE_DATA_CONTAINER<INT> 			SITE_INT;
typedef HILINK_SITE_DATA_CONTAINER<UINT> 			SITE_UINT;
typedef HILINK_SITE_DATA_CONTAINER<DOUBLE> 			SITE_DOUBLE;
typedef HILINK_SITE_DATA_CONTAINER<ARRAY_I> 		SITE_ARRAY_I;
typedef HILINK_SITE_DATA_CONTAINER<ARRAY_D> 		SITE_ARRAY_D;

typedef HILINK_SITE_MACRO_DATA_CONTAINER<INT> 		MACRO_INT;
typedef HILINK_SITE_MACRO_DATA_CONTAINER<UINT> 		MACRO_UINT;
typedef HILINK_SITE_MACRO_DATA_CONTAINER<DOUBLE> 	MACRO_DOUBLE;
typedef HILINK_SITE_MACRO_DATA_CONTAINER<ARRAY_I> 	MACRO_ARRAY_I;
typedef HILINK_SITE_MACRO_DATA_CONTAINER<ARRAY_D> 	MACRO_ARRAY_D;

typedef HILINK_SITE_LANE_DATA_CONTAINER<INT> 		LANE_INT;
typedef HILINK_SITE_LANE_DATA_CONTAINER<UINT> 		LANE_UINT;
typedef HILINK_SITE_LANE_DATA_CONTAINER<DOUBLE> 	LANE_DOUBLE;
typedef HILINK_SITE_LANE_DATA_CONTAINER<ARRAY_I> 	LANE_ARRAY_I;
typedef HILINK_SITE_LANE_DATA_CONTAINER<ARRAY_D> 	LANE_ARRAY_D;

// ADD by XinGang begin
typedef HILINK_SITE_LANE_DATA_CONTAINER<EYEDATA> 		LANE_EYEDATA;
typedef HILINK_SITE_LANE_DATA_CONTAINER<vector<EYEDATA> > 	LANE_EYEDIAGRAM;
typedef HILINK_SITE_LANE_DATA_CONTAINER<Ctle_Set> 			LANE_CTLE;

// ADD by XinGang end

typedef HILINK_MACRO_DATA_CONTAINER<INT> 					MACRO_INT_ONESITE;
typedef HILINK_LANE_DATA_CONTAINER<INT> 					LANE_INT_ONESITE;


class SITE_PASSFAIL_RESULT{
public:
	SITE_PASSFAIL_RESULT();
	~SITE_PASSFAIL_RESULT();
	void init(bool value=false);
	bool isAllSitePassed();
	bool isAllSiteFailed();
	bool& operator[](uint SiteID);
	SITE_PASSFAIL_RESULT& operator&=(SITE_PASSFAIL_RESULT& that);
private:
	HILINK_SITE_DATA_CONTAINER<bool> eachsite;
};

typedef struct{
	bool find_all0;
	bool find_all1;
} T_ALOS_STATUS;
typedef HILINK_SITE_LANE_DATA_CONTAINER<T_ALOS_STATUS> LANE_ALOS_STATUS;

typedef HILINK_LANE_DATA_CONTAINER<int>     LANE_INT_DATA;
typedef HILINK_LANE_DATA_CONTAINER<double>  LANE_DBL_DATA;

typedef HILINK_SITE_LANE_DATA_CONTAINER<map<string,double> > LANE_ARRAY_MAP;
typedef HILINK_SITE_MACRO_DATA_CONTAINER<map<string, double> > 	MACRO_ARRAY_MAP;

#endif /* HILINK_TYPES_H_ */
